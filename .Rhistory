# men blood pressure category
mbp26,
# medication for BP
mbp19, wbp19,
mbp16,
#body mass index (BMI) women
ha40,
# womens weight in kg
ha2,
# womens height in centimeter
ha3,
#mens body mass index (BMI)
hb40,
# mens weight in kg
hb2,
# mens height in centimeter
hb3,
# Provence, type of residence
hv024,hv025,
# Independent variables
# smoking in last 24 hour
ha35, hb35,
#place of residence
hv025,
# wealth: hv270
hv270)
b <- b %>% mutate(b, BP_systolic_female = mean(wbp9 + wbp13 + wbp22 + wbp24) )
b <- merged_data |>
select(
# weight (womens indv sample weight v005.x)
#caseid
hhid, hv005, hv028,
#ID,
hv003,shecoreg, shdist,
hv104,  hv105, hv115,  #sex of respondent # age # current marital status
sh17b1, # education
hv106,hv107,  #Education level
hv040, # cluster elevation
hv021:hv025, # type of residency
shecoreg, # ecological belt
hv222:hv226, # other information
hv241,  # ecological belt
hfs1:hfs_sev, wbp15,
# Dependent variables (BP Women)
# women blood pressure first systolic reading
wbp9,
#women blood pressure first diastolic reading
wbp10,
#women blood pressure second systolic reading
wbp13,
#women blood pressure second diastolic reading
wbp14,
#women blood pressure third systolic reading
wbp22,
#women blood pressure third diastolic reading
wbp23,
#women blood pressure Final systolic reading
wbp24,
#women blood pressure Final diastolic reading
wbp25,
# women blood pressure category
wbp26,
# men blood pressure first systolic reading
mbp9,
#men blood pressure first diastolic reading
mbp10,
#men blood pressure second systolic reading
mbp13,
#men blood pressure second diastolic reading
mbp14,
#men blood pressure third systolic reading
mbp22,
#men blood pressure third diastolic reading
mbp23,
#men blood pressure Final systolic reading
mbp24,
#men blood pressure Final diastolic reading
mbp25,
# men blood pressure category
mbp26,
# medication for BP
mbp19, wbp19,
mbp16,
#body mass index (BMI) women
ha40,
# womens weight in kg
ha2,
# womens height in centimeter
ha3,
#mens body mass index (BMI)
hb40,
# mens weight in kg
hb2,
# mens height in centimeter
hb3,
# Provence, type of residence
hv024,hv025,
# Independent variables
# smoking in last 24 hour
ha35, hb35,
#place of residence
hv025,
# wealth: hv270
hv270)
b <- dhs22_personal |>
select(
# weight (womens indv sample weight v005.x)
#caseid
hhid, hv005, hv028,
#ID,
hv003,shecoreg, shdist,
hv104,  hv105, hv115,  #sex of respondent # age # current marital status
sh17b1, # education
hv106,hv107,  #Education level
hv040, # cluster elevation
hv021:hv025, # type of residency
shecoreg, # ecological belt
hv222:hv226, # other information
hv241,  # ecological belt
hfs1:hfs_sev, wbp15,
# Dependent variables (BP Women)
# women blood pressure first systolic reading
wbp9,
#women blood pressure first diastolic reading
wbp10,
#women blood pressure second systolic reading
wbp13,
#women blood pressure second diastolic reading
wbp14,
#women blood pressure third systolic reading
wbp22,
#women blood pressure third diastolic reading
wbp23,
#women blood pressure Final systolic reading
wbp24,
#women blood pressure Final diastolic reading
wbp25,
# women blood pressure category
wbp26,
# men blood pressure first systolic reading
mbp9,
#men blood pressure first diastolic reading
mbp10,
#men blood pressure second systolic reading
mbp13,
#men blood pressure second diastolic reading
mbp14,
#men blood pressure third systolic reading
mbp22,
#men blood pressure third diastolic reading
mbp23,
#men blood pressure Final systolic reading
mbp24,
#men blood pressure Final diastolic reading
mbp25,
# men blood pressure category
mbp26,
# medication for BP
mbp19, wbp19,
mbp16,
#body mass index (BMI) women
ha40,
# womens weight in kg
ha2,
# womens height in centimeter
ha3,
#mens body mass index (BMI)
hb40,
# mens weight in kg
hb2,
# mens height in centimeter
hb3,
# Provence, type of residence
hv024,hv025,
# Independent variables
# smoking in last 24 hour
ha35, hb35,
#place of residence
hv025,
# wealth: hv270
hv270)
b <- b %>% mutate(b, BP_systolic_female = mean(wbp9 + wbp13 + wbp22 + wbp24) )
View(b)
nepal<-sf::st_read("raw_datasets/hermes_NPL_new_wgs(1)/hermes_NPL_new_wgs_2.shp")
# ----------------------Shape file of Nepal--------------------------------------------------
# shape file of Nepal
nepal<-sf::st_read(here("raw_datasets", "hermes_NPL_new_wgs(1)", "hermes_NPL_new_wgs_2.shp"))
# ----------------------Shape file of Nepal--------------------------------------------------
# shape file of Nepal
nepal<-sf::st_read(here("raw_datasets", "hermes_NPL_new_wgs(1)", "hermes_NPL_new_wgs_2.shp"))
library(here)
nepal<-sf::st_read(here("raw_datasets", "hermes_NPL_new_wgs(1)", "hermes_NPL_new_wgs_2.shp"))
nepal<-sf::st_read(here("raw_datasets", "hermes_NPL_new_wgs(1)", "hermes_NPL_new_wgs_2.shp"))
# ----------------------Shape file of Nepal--------------------------------------------------
# shape file of Nepal
nepal<-sf::st_read(here("raw_datasets", "hermes_NPL_new_wgs(1)", "hermes_NPL_new_wgs_2.shp"))
cluster<-st_read("Datasets/GPS_NDHS2022/districts.shp")
# read cluster shape file
cluster<- st_read("Datasets/GPS_NDHS2022/districts.shp")
# ----------------------Shape file of Nepal--------------------------------------------------
# shape file of Nepal
nepal<-sf::st_read(here("raw_datasets", "hermes_NPL_new_wgs(1)", "hermes_NPL_new_wgs_2.shp"))
nepal<-sf::st_read(here("raw_datasets", "hermes_NPL_new_wgs(1)", "hermes_NPL_new_wgs_2.shp"))
# read cluster shape file
cluster<- st_read("raw_dataset/GPS_NDHS2022/districts.shp")
# read cluster shape file
cluster<- st_read("raw_datasets/GPS_NDHS2022/districts.shp")
# ----------------------Shape file of Nepal--------------------------------------------------
# shape file of Nepal
nepal <- sf::st_read(here("raw_datasets", "hermes_NPL_new_wgs(1)", "hermes_NPL_new_wgs_2.shp"))
# ----------------------Shape file of Nepal--------------------------------------------------
# shape file of Nepal
nepal <- sf::st_read(here("raw_datasets", "hermes_NPL_new_wgs(1)", "hermes_NPL_new_wgs_2.shp"))
nepal <- sf::st_read(here("raw_datasets", "hermes_NPL_new_wgs(1)", "hermes_NPL_new_wgs_2.shp"))
# ----------------------Shape file of Nepal--------------------------------------------------
# shape file of Nepal
nepal <- sf::st_read(here("raw_datasets", "hermes_NPL_new_wgs", "hermes_NPL_new_wgs_2.shp"))
source(here("codes", "04 data_harmonization_merging.R"))
library(here)
source(here("codes", "04 data_harmonization_merging.R"))
source(here("codes", "04 data_harmonization_merging.R"))
source(here("codes", "04 data_harmonization_merging.R"))
source(here("codes","02 gps_data integration.R"))
Packages <- c("st","here","gtsummary","foreign","survey",'labelled',"readxl", "tidyverse", "haven","rockchalk", "forcats")
source(here("codes","02 gps_data integration.R"))
Packages <- c("sf","here","gtsummary","foreign","survey",'labelled',"readxl", "tidyverse", "haven","rockchalk", "forcats")
source(here("codes","02 gps_data integration.R"))
nepal <- sf::st_read(here("raw_dataset", "hermes_NPL_new_wgs", "hermes_NPL_new_wgs_2.shp"))
cluster <- sf::st_read(here("raw_dataset", "GPS_NDHS2022", "NPGE81FL", "NPGE81FL.shp"))
cluster <- st_read(here("raw_dataset", "GPS_NDHS2022", "districts.shp"))
# read cluster shape file
cluster <- sf::st_read(here("raw_dataset", "GPS_NDHS2022", "districts.shp"))
# join cluster with our main dataset by district id
dhs22_personal <- dhs22_personal %>%
fuzzyjoin::stringdist_left_join(cluster, by =c("shdist"="DISTRICT"), max_dist = 1 ) %>%
mutate(District=ifelse(shdist=="makwanpur", "Makawanpur", as.character(DISTRICT)),
District=ifelse(shdist=="nawalparasi east", "Nawalpur", District),
District=ifelse(shdist=="nawalparasi west", "Parasi", District),
District=ifelse(shdist=="rukum west", "Rukum West", District),
DISTRICT=ifelse(shdist=="kavrepalanchok", "Kabhrepalanchok", District),
)
# Load INLA and spdep package
library(INLA)
library(spdep)
# Create spatial adjacency matrix
regions_shapefile <- st_read(here("raw_dataset", "hermes_NPL_new_wgs",
"hermes_NPL_new_wgs_2.shp"))
dist_list <- c("Achham", "Arghakhanchi", "Baglung", "Baitadi", "Bajhang",
"Bajura", "Banke", "Bara", "Bardiya", "Bhaktapur", "Bhojpur",
"Chitawan", "Dadeldhura", "Dailekh", "Dang", "Darchula",
"Dhading", "Dhankuta", "Dhanusha", "Dolakha", "Dolpa", "Doti",
"Gorkha", "Gulmi", "Humla", "Ilam", "Jajarkot", "Jhapa",
"Jumla", "Kabhrepalanchok", "Kailali", "Kalikot", "Kanchanpur",
"Kapilbastu", "Kaski", "Kathmandu", "Khotang", "Lalitpur",
"Lamjung", "Mahottari", "Makawanpur", "Manang", "Morang",
"Mugu", "Mustang", "Myagdi", "Nawalpur", "Nuwakot", "Okhaldhunga",
"Palpa", "Panchthar", "Parasi", "Parbat", "Parsa", "Pyuthan",
"Ramechhap", "Rasuwa", "Rautahat", "Rolpa", "Rukum East",
"Rukum West", "Rupandehi", "Salyan", "Sankhuwasabha", "Saptari",
"Sarlahi", "Sindhuli", "Sindhupalchok", "Siraha", "Solukhumbu",
"Sunsari", "Surkhet", "Syangja", "Tanahu", "Taplejung", "Terhathum",
"Udayapur")
regions_shapefile$DISTRICT2<-regions_shapefile$DISTRICT
regions_shapefile$DISTRICT<-factor(regions_shapefile$DISTRICT, levels=dist_list, labels = dist_list)
regions_shapefile$DISTRICT<-as.numeric(regions_shapefile$DISTRICT)
dhs22_personal$DISTRICT<-as.numeric(factor(dhs22_personal$DISTRICT, levels=dist_list, labels = dist_list))
source(here("codes", "04 data_harmonization_merging.R"))
source(here("codes", "04 data_harmonization_merging.R"))
View(combined_data_cleaned)
source(here("codes", "04 data_harmonization_merging.R"))
View(combined_data_cleaned)
View(combined_data_cleaned)
View(combined_data_cleaned)
matches <- regmatches(combined_data_cleaned$geometry, regexec(pattern, combined_data_cleaned$geometry)
pattern <- "POINT\\(([-\\d.]+) ([-\\d.]+)\\)"
pattern <- "POINT\\(([-\\d.]+) ([-\\d.]+)\\)"
matches <- regmatches(combined_data_cleaned$geometry, regexec(pattern, combined_data_cleaned$geometry))
View(matches)
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
coords = str_extract(geometry, "POINT\\(([-\\d.]+) ([-\\d.]+)\\)"),
Long_X = str_extract(coords, "[-\\d.]+"),
Lat_Y = str_extract(coords, "(?<= )[-\\d.]+")
) %>%
select(-coords)
View(combined_data_cleaned)
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
geometry = as.character(geometry),  # Ensure it's a character vector
coords = str_extract(geometry, "POINT\\(([-\\d.]+) ([-\\d.]+)\\)"),
Longitude = str_extract(coords, "[-\\d.]+"),
Latitude = str_extract(coords, "(?<= )[-\\d.]+")
) %>%
select(-coords)  # Optional: Remove the temporary coords column
View(combined_data_cleaned)
combined_data <- rbind(female_data, male_data)
# clean dataset where either new_bmi or blood_pressure data is present
combined_data_cleaned <- combined_data %>%
filter(!is.na(bmi_category) | !is.na(blood_pressure_cat))
View(combined_data_cleaned)
# converting a specific factor column to numeric and createing a new varaibles
combined_data$new_bmi <- as.numeric(as.character(combined_data$BMI))
combined_data$new_systolic <- as.numeric(as.character(combined_data$systolic_bp))
combined_data$new_diastolic <- as.numeric(as.character(combined_data$diastolic_bp))
combined_data$new_height <- as.numeric(as.character(combined_data$height))
combined_data$new_weight <- as.numeric(as.character(combined_data$weight))
combined_data$new_weight <- combined_data$new_weight / 10  # Divide by 10 to place the decimal point
combined_data$new_height <- combined_data$new_height / 1000
combined_data$new_bmi <- combined_data$new_bmi/100
summary(combined_data$new_bmi)
# creating a new categorical variable for obesity
combined_data$bmi_category <- cut(
combined_data$new_bmi,
breaks = c(-Inf, 18.5, 24.9, 29.9, Inf),
labels = c("too thin", "Normal", "overweight", "obese"),
right = TRUE)
# Create a new variable for high blood pressure
combined_data$high_blood_pressure <- ifelse(
combined_data$new_systolic >= 140 | combined_data$new_diastolic >= 90,
1,  # Indicates high blood pressure
0   # Indicates normal blood pressure
)
# creating catagorized blood pressure
combined_data <- combined_data %>%
mutate(blood_pressure_cat_new = case_when(
new_systolic < 120 & new_diastolic < 80 ~ "Optimal",
(new_systolic >= 120 & new_systolic <= 129) | (new_diastolic >= 80 & new_diastolic <= 84) ~ "Normal",
(new_systolic >= 130 & new_systolic <= 139) | (new_diastolic >= 85 & new_diastolic <= 89) ~ "High normal",
(new_systolic >= 140 & new_systolic <= 159) | (new_diastolic >= 90 & new_diastolic <= 99) ~ "Grade 1, mildly elevated",
(new_systolic >= 160 & new_systolic <= 179) | (new_diastolic >= 100 & new_diastolic <= 109) ~ "Grade 2, moderately elevated",
(new_systolic >= 180) | (new_diastolic >= 110) ~ "Grade 3, severely elevated",
TRUE ~ NA_character_  # This handles any cases that don't fit above
))
table(combined_data$blood_pressure_cat_new, combined_data$blood_pressure_cat)
table(combined_data$high_blood_pressure)
# clean dataset where either new_bmi or blood_pressure data is present
combined_data_cleaned <- combined_data %>%
filter(!is.na(bmi_category) | !is.na(blood_pressure_cat))
View(combined_data_cleaned)
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
geometry = as.character(geometry),  # Ensure it's a character vector
coords = str_extract(geometry, "POINT\\(([-\\d.]+) ([-\\d.]+)\\)"),
Long_X = str_extract(coords, "[-\\d.]+"),
Lat_Y = str_extract(coords, "(?<= )[-\\d.]+")
) %>%
select(-coords)  # Optional: Remove the temporary coords column
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
# Ensure it's a character vector
coords = str_extract(geometry, "POINT\\(([-\\d.]+) ([-\\d.]+)\\)"),
Long_X = str_extract(coords, "[-\\d.]+"),
Lat_Y = str_extract(coords, "(?<= )[-\\d.]+")
) %>%
select(-coords)  # Optional: Remove the temporary coords column
# clean dataset where either new_bmi or blood_pressure data is present
combined_data_cleaned <- combined_data %>%
filter(!is.na(bmi_category) | !is.na(blood_pressure_cat))
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
# Ensure it's a character vector
coords = str_extract(geometry, "POINT\\(([-\\d.]+) ([-\\d.]+)\\)"),
Long_X = str_extract(coords, "[-\\d.]+"),
Lat_Y = str_extract(coords, "(?<= )[-\\d.]+")
) %>%
select(-coords)  # Optional: Remove the temporary coords column
combined_data_cleaned$geometry <- as.character(combined_data_cleaned$geometry)
# clean dataset where either new_bmi or blood_pressure data is present
combined_data_cleaned <- combined_data %>%
filter(!is.na(bmi_category) | !is.na(blood_pressure_cat))
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
Longitude = str_extract(geometry, "(?<=POINT \\()[^ ]+"),
Latitude = str_extract(geometry, "(?<=POINT \\([-\\d.]+ )[-\\d.]+")
)
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
Longitude = str_extract(geometry, "(?<=POINT \\()[^ ]+"),
Latitude = str_extract(geometry, "(?<=POINT \\([-\\d.]+ )[-\\d.]+")
)
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
Longitude = as.numeric(str_extract(geometry, "(?<=POINT \\()[0-9.-]+")),
Latitude = as.numeric(str_extract(geometry, "(?<=POINT \\([0-9.-]+ )[0-9.-]+"))
)
View(combined_data_cleaned)
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
Longitude = as.numeric(str_extract(geometry, "(?<=POINT \\()[0-9.-]+")),
Latitude = as.numeric(str_extract(geometry, "(?<=POINT \\([0-9.-]+ )[0-9.-]+"))
)
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
Longitude = as.numeric(str_extract(geometry, "POINT \\(([-\\d.]+)")),
Latitude = as.numeric(str_extract(geometry, "POINT \\([-\\d.]+ ([-\\d.]+)"))
)
combined_data_cleaned$geometry <- as.character(combined_data_cleaned$geometry)
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
Longitude = as.numeric(str_extract(geometry, "c\\(([-\\d.]+),")),
Latitude = as.numeric(str_extract(geometry, ", ([-\\d.]+)\\)"))
)
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
Longitude = as.numeric(str_extract(geometry, "c\\(([-\\d.]+),")),
Latitude = as.numeric(str_extract(geometry, ", ([\\d.-]+)\\)"))
)
# Extracting longitude and latitude
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
Longitude = as.numeric(str_extract(geometry, "(?<=c\\()[-\\d.]+")),
Latitude = as.numeric(str_extract(geometry, "(?<=, )[-\\d.]+(?=\\))"))
)
# Extracting longitude and latitude
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
Long_x = format(as.numeric(str_extract(geometry, "(?<=c\\()[-\\d.]+")), nsmall = 10),
Lati_y = format(as.numeric(str_extract(geometry, "(?<=, )[-\\d.]+(?=\\))")), nsmall = 10)
)
# Extracting longitude and latitude
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
Long_x = format(as.numeric(str_extract(geometry, "(?<=c\\()[-\\d.]+")), nsmall = 6),
Lati_y = format(as.numeric(str_extract(geometry, "(?<=, )[-\\d.]+(?=\\))")), nsmall = 6)
)
# Extracting longitude and latitude
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
Long_x = format(as.numeric(str_extract(geometry, "(?<=c\\()[-\\d.]+")), nsmall = 6),
Lati_y = format(as.numeric(str_extract(geometry, "(?<=, )[-\\d.]+(?=\\))")), nsmall = 6)
)
# clean dataset where either new_bmi or blood_pressure data is present
combined_data_cleaned <- combined_data %>%
filter(!is.na(bmi_category) | !is.na(blood_pressure_cat))
# Extracting longitude and latitude
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
geometry = as.character(geometry)
Long_x = format(as.numeric(str_extract(geometry, "(?<=c\\()[-\\d.]+")), nsmall = 6),
# Extracting longitude and latitude
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
geometry = as.character(geometry),
Long_x = format(as.numeric(str_extract(geometry, "(?<=c\\()[-\\d.]+")), nsmall = 6),
Lati_y = format(as.numeric(str_extract(geometry, "(?<=, )[-\\d.]+(?=\\))")), nsmall = 6)
)
unique(combined_data_cleaned$bmi_category)
unique(combined_data_cleaned$BMI)
unique(combined_data_cleaned$bmi_category)
# Assuming combined_data_cleaned is your dataframe
combined_data_cleaned$bmi_category <- factor(
combined_data_cleaned$bmi_category,
levels = c("too thin", "Normal", "overweight", "obese"),
labels = c(1, 2, 3, 4),
ordered = TRUE
)
View(female_data)
table(combined_data_cleaned$bmi_category)
# clean dataset where either new_bmi or blood_pressure data is present
combined_data_cleaned <- combined_data %>%
filter(!is.na(bmi_category) | !is.na(blood_pressure_cat))
# Extracting longitude and latitude
combined_data_cleaned <- combined_data_cleaned %>%
mutate(
geometry = as.character(geometry),
Long_x = format(as.numeric(str_extract(geometry, "(?<=c\\()[-\\d.]+")), nsmall = 6),
Lati_y = format(as.numeric(str_extract(geometry, "(?<=, )[-\\d.]+(?=\\))")), nsmall = 6))
table(combined_data_cleaned$bmi_category)
# Assuming combined_data_cleaned is your dataframe
combined_data_cleaned$bmi_category <- factor(
combined_data_cleaned$bmi_category,
levels = c("too thin", "Normal", "overweight", "obese"),
labels = c(1, 2, 3, 4),
ordered = TRUE
)
)
table(combined_data_cleaned$bmi_category)
# Combine 'overweight' and 'obese' into 'overweight/obese'
combined_data_cleaned <- combined_data_cleaned %>%
mutate(bmi_category = recode(bmi_category,
"overweight" = "overweight/obese",
"obese" = "overweight/obese"))
# Update the factor levels
combined_data_cleaned$bmi_category <- factor(
combined_data_cleaned$bmi_category,
levels = c("too thin", "Normal", "overweight/obese"),
labels = c(1, 2, 3),
ordered = TRUE
)
table(combined_data_cleaned$bmi_category)
# clean dataset where either new_bmi or blood_pressure data is present
combined_data_cleaned <- combined_data %>%
filter(!is.na(bmi_category) | !is.na(blood_pressure_cat))
# Combine 'overweight' and 'obese' into 'overweight/obese'
combined_data_cleaned <- combined_data_cleaned %>%
mutate(bmi_category = recode(bmi_category,
"overweight" = "overweight/obese",
"obese" = "overweight/obese"))
# Update the factor levels
combined_data_cleaned$bmi_category <- factor(
combined_data_cleaned$bmi_category,
levels = c("too thin", "Normal", "overweight/obese"),
labels = c(1, 2, 3),
ordered = TRUE
)
table(combined_data_cleaned$bmi_category)
table(combined_data_cleaned$blood_pressure_cat)
table(combined_data_cleaned$blood_pressure_cat_new)
21498+47421
library(here)
source(here("codes", "04 data_harmonization_merging.R"))
View(combined_data_cleaned)
